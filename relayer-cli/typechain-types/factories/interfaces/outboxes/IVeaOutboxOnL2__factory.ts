/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IVeaOutboxOnL2, IVeaOutboxOnL2Interface } from "../../../interfaces/outboxes/IVeaOutboxOnL2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "resolveDisputedClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IVeaOutboxOnL2__factory {
  static readonly abi = _abi;
  static createInterface(): IVeaOutboxOnL2Interface {
    return new utils.Interface(_abi) as IVeaOutboxOnL2Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IVeaOutboxOnL2 {
    return new Contract(address, _abi, signerOrProvider) as IVeaOutboxOnL2;
  }
}
