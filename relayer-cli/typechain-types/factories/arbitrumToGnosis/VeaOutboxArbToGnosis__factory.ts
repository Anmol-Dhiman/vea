/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { VeaOutboxArbToGnosis, VeaOutboxArbToGnosisInterface } from "../../arbitrumToGnosis/VeaOutboxArbToGnosis";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epochPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minChallengePeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeoutEpochs",
        type: "uint256",
      },
      {
        internalType: "contract IAMB",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_routerArbToGnosis",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sequencerDelayLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxMissingBlocks",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_routerChainId",
        type: "uint256",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_challenger",
        type: "address",
      },
    ],
    name: "Challenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
    ],
    name: "MessageRelayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "VerificationStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "Verified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newSequencerDelayLimit",
        type: "uint256",
      },
    ],
    name: "sequencerDelayLimitUpdateReceived",
    type: "event",
  },
  {
    inputs: [],
    name: "amb",
    outputs: [
      {
        internalType: "contract IAMB",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "censorshipTestStatus",
    outputs: [
      {
        internalType: "enum VeaOutboxArbToGnosis.CensorshipTestStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositPlusReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "epochAt",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochNow",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "hashClaim",
    outputs: [
      {
        internalType: "bytes32",
        name: "hashedClaim",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_msgId",
        type: "uint256",
      },
    ],
    name: "isMsgRelayed",
    outputs: [
      {
        internalType: "bool",
        name: "isRelayed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestVerifiedEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMissingBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minChallengePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "resolveDisputedClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "routerArbToGnosis",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerDelayLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "startVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timestampDelayUpdated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newSequencerDelayLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "updateSequencerDelayLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "verifySnapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawChallengeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawChallengerEscapeHatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawClaimDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawClaimerEscapeHatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101e06040523480156200001257600080fd5b5060405162002b7e38038062002b7e8339810160408190526200003591620000f2565b60e08a90526101608990526101a08790526101808890526001600160a01b0380871660805285811660a05260048590556101c0849052610140839052811660c0526200008360028b620001a3565b610100819052620000968b6002620001c6565b620000a29190620001e6565b6101205261016051600190620000b99042620001a3565b620000c59190620001e6565b60015550620001fc98505050505050505050565b6001600160a01b0381168114620000ef57600080fd5b50565b6000806000806000806000806000806101408b8d0312156200011357600080fd5b8a51995060208b0151985060408b0151975060608b0151965060808b01516200013c81620000d9565b60a08c01519096506200014f81620000d9565b8095505060c08b0151935060e08b015192506101008b015191506101208b01516200017a81620000d9565b809150509295989b9194979a5092959850565b634e487b7160e01b600052601160045260246000fd5b600082620001c157634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417620001e057620001e06200018d565b92915050565b81810381811115620001e057620001e06200018d565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516127c0620003be6000396000818161043e01526121bd0152600081816104650152818161079401528181611a1501528181611c090152611ec90152600081816104c6015261215101526000818161048c015281816107b801528181610b4901528181610f20015281816117e80152818161199601528181611a3901528181611c2d0152611eed0152600081816103fb0152818161092f0152610c620152600081816103d401526114f20152600081816103580152818161140101526116550152600081816104ed0152818161058d01528181610e650152818161178501528181611d8201528181611e170152818161204201526120de0152600081816102f1015281816105b301528181610e8b01528181611427015281816114930152818161167b015281816116e70152818161172a01528181611da801528181611e3d01528181612068015261210401526000818161051401528181610a1c0152610d4f01526000818161022201528181610833015281816108ad0152818161099101528181610b7e01528181610be00152610cc401526127c06000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063541adcca1161010f578063b5b7a184116100a2578063d5e6a9df11610071578063d5e6a9df1461050f578063da2b7bc414610536578063df19e6ff14610549578063e813a7551461056957600080fd5b8063b5b7a18414610487578063b633b944146104ae578063c2114a16146104c1578063d0e30db0146104e857600080fd5b8063930f28af116100de578063930f28af1461041d5780639588eca214610430578063aa22a1c614610439578063b044397e1461046057600080fd5b8063541adcca146103b35780637ffc2a6e146103c6578063836e344b146103cf5780638d96fdea146103f657600080fd5b806331ddf7431161018757806344df8e701161015657806344df8e70146103535780634788cb381461037a57806349b4299e1461038d5780634a439cfe146103a057600080fd5b806331ddf743146102c65780633ce43cfd146102d95780633fc8cef3146102ec57806343b066d51461031357600080fd5b80632639c060116101c35780632639c0601461027757806327ee6bdd146102975780632c192519146102a057806331d14457146102b357600080fd5b806301139b68146101f55780630f0adca51461020a5780631062b39a1461021d578063222ae78614610261575b600080fd5b6102086102033660046122fa565b610572565b005b610208610218366004612328565b610792565b6102447f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610269610b42565b604051908152602001610258565b61026961028536600461235f565b60026020526000908152604090205481565b61026960015481565b6102086102ae366004612378565b610b73565b6102086102c1366004612378565b610e4a565b6102086102d43660046123fb565b61109f565b6102086102e73660046124bd565b61133f565b6102447f000000000000000000000000000000000000000000000000000000000000000081565b61034361032136600461235f565b600881901c600090815260036020526040902054600160ff9092161c81161490565b6040519015158152602001610258565b6102697f000000000000000000000000000000000000000000000000000000000000000081565b6102086103883660046124bd565b611579565b61020861039b3660046122fa565b6117b1565b6102696103ae36600461235f565b61198f565b6102696103c13660046124f6565b6119c1565b61026960055481565b6102697f000000000000000000000000000000000000000000000000000000000000000081565b6102697f000000000000000000000000000000000000000000000000000000000000000081565b61020861042b3660046122fa565b611a13565b61026960005481565b6102697f000000000000000000000000000000000000000000000000000000000000000081565b6102697f000000000000000000000000000000000000000000000000000000000000000081565b6102697f000000000000000000000000000000000000000000000000000000000000000081565b6102086104bc3660046122fa565b611c07565b6102697f000000000000000000000000000000000000000000000000000000000000000081565b6102697f000000000000000000000000000000000000000000000000000000000000000081565b6102447f000000000000000000000000000000000000000000000000000000000000000081565b6102086105443660046122fa565b611ec7565b61055c6105573660046124f6565b612133565b604051610258919061252f565b61026960045481565b6040516323b872dd60e01b81523360048201523060248201527f000000000000000000000000000000000000000000000000000000000000000060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106289190612549565b61064d5760405162461bcd60e51b81526004016106449061256b565b60405180910390fd5b610656816119c1565b600083815260026020526040902054146106825760405162461bcd60e51b81526004016106449061259a565b60c08101516001600160a01b0316156106dd5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20616c7265616479206368616c6c656e6765642e000000000000006044820152606401610644565b60008160a0015160028111156106f5576106f5612519565b146107425760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792076657269666965642e0000000000000000006044820152606401610644565b3360c0820152610751816119c1565b600083815260026020526040808220929092559051339184917fcfe09ca25f55d949baba5e280f5750c9ba4b9048fca5532f916067d433afe4d79190a35050565b7f00000000000000000000000000000000000000000000000000000000000000006001547f000000000000000000000000000000000000000000000000000000000000000042816107e5576107e56125c2565b040311156108285760405162461bcd60e51b815260206004820152601060248201526f213934b233b29029b43aba3237bbb71760811b6044820152606401610644565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108ab5760405162461bcd60e51b815260206004820152602260248201527f4e6f742066726f6d206e617469766520476e6f73697320414d42206272696467604482015261329760f11b6064820152608401610644565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639e307dff6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092d91906125d8565b7f00000000000000000000000000000000000000000000000000000000000000001461098f5760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21031b430b4b71034b21760791b6044820152606401610644565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d67bdd256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1191906125f1565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610a845760405162461bcd60e51b815260206004820152601060248201526f2737ba10333937b6903937baba32b91760811b6044820152606401610644565b60015483118015610a9457508115155b15610ad757600183905560008290556040518381527ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f79060200160405180910390a15b610ae0816119c1565b60008481526002602052604090205403610b3d578051829003610b0957600160a0820152610b24565b60c08101516001600160a01b031615610b2457600260a08201525b610b2d816119c1565b6000848152600260205260409020555b505050565b6000610b6e7f000000000000000000000000000000000000000000000000000000000000000042612624565b905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bde5760405162461bcd60e51b815260206004820152601060248201526f2737ba10333937b690313934b233b29760811b6044820152606401610644565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639e307dff6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6091906125d8565b7f000000000000000000000000000000000000000000000000000000000000000014610cc25760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21031b430b4b71034b21760791b6044820152606401610644565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d67bdd256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4491906125f1565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610db75760405162461bcd60e51b815260206004820152601060248201526f2737ba10333937b6903937baba32b91760811b6044820152606401610644565b8060055410610dff5760405162461bcd60e51b815260206004820152601460248201527326b2b9b9b0b3b29034b99037baba3230ba32b21760611b6044820152606401610644565b8160045414610e4657600482905560058190556040518281527f684f6fb71cbcb798156dcca2a95dbd142fa1f8957637833b1897ab89e05aa7079060200160405180910390a15b5050565b6040516323b872dd60e01b81523360048201523060248201527f000000000000000000000000000000000000000000000000000000000000000060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610edc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f009190612549565b610f1c5760405162461bcd60e51b81526004016106449061256b565b60017f00000000000000000000000000000000000000000000000000000000000000004281610f4d57610f4d6125c2565b04038214610f9d5760405162461bcd60e51b815260206004820152601960248201527f45706f636820686173206e6f7420796574207061737365642e000000000000006044820152606401610644565b80610fba5760405162461bcd60e51b81526004016106449061259a565b6000828152600260205260409020541561100c5760405162461bcd60e51b815260206004820152601360248201527221b630b4b69030b63932b0b23c9036b0b2329760691b6044820152606401610644565b6040805160e0810182528281523360208201524263ffffffff16918101919091526000606082018190526080820181905260a0820181905260c0820152611052906119c1565b6000838152600260209081526040918290209290925551828152839133917fd95107f4584744c6c893a04c43058aadd1ce8aac8ca5d64140eaf277de6c1d57910160405180910390a35050565b604085106110e15760405162461bcd60e51b815260206004820152600f60248201526e283937b7b3103a37b7903637b7339760891b6044820152606401610644565b6000848484846040516020016110fa9493929190612646565b604051602081830303815290604052805190602001209050806000526020600020905060005b8681101561117a57600088888381811061113c5761113c612688565b9050602002013590508281111561116157826000528060205260406000209250611171565b8060005282602052604060002092505b50600101611120565b5080600054146111bd5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210383937b7b31760911b6044820152606401610644565b600885901c66ffffffffffffff1660008181526003602052604090205460ff87169080821c600116156112325760405162461bcd60e51b815260206004820152601760248201527f4d65737361676520616c72656164792072656c617965640000000000000000006044820152606401610644565b6000838152600360205260408082206001851b84179055516001600160a01b03891690611262908990899061269e565b6000604051808303816000865af19150503d806000811461129f576040519150601f19603f3d011682016040523d82523d6000602084013e6112a4565b606091505b50509050806112f55760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2063616c6c20636f6e74726163740000000000000000006044820152606401610644565b60405167ffffffffffffffff8a1681527f54303fab361bc52c2f1f56ace7351189582264f74ce47a6e7c3f478d64c429439060200160405180910390a15050505050505050505050565b6113516103c1368390038301836124f6565b6000838152600260205260409020541461137d5760405162461bcd60e51b81526004016106449061259a565b600261138f60c0830160a084016126ae565b60028111156113a0576113a0612519565b146113e15760405162461bcd60e51b815260206004820152601160248201527021b430b63632b733b2903330b4b632b21760791b6044820152606401610644565b6000828152600260205260408082209190915551630852cd8d60e31b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b15801561147357600080fd5b505af1158015611487573d6000803e3d6000fd5b50506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016915063a9059cbb90506114cc60e0840160c085016126c9565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201527f000000000000000000000000000000000000000000000000000000000000000060248201526044015b6020604051808303816000875af1158015611539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155d9190612549565b610e465760405162461bcd60e51b81526004016106449061256b565b61158b6103c1368390038301836124f6565b600083815260026020526040902054146115b75760405162461bcd60e51b81526004016106449061259a565b60016115c960c0830160a084016126ae565b60028111156115da576115da612519565b146116175760405162461bcd60e51b815260206004820152600d60248201526c21b630b4b6903330b4b632b21760991b6044820152606401610644565b600082815260026020526040812081905561163860e0830160c084016126c9565b6001600160a01b03161461172057604051630852cd8d60e31b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b1580156116c757600080fd5b505af11580156116db573d6000803e3d6000fd5b50506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016915063a9059cbb90506114cc60408401602085016126c9565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a9059cbb61175f60408401602085016126c9565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201527f0000000000000000000000000000000000000000000000000000000000000000602482015260440161151a565b6117ba816119c1565b600083815260026020526040902054146117e65760405162461bcd60e51b81526004016106449061259a565b7f000000000000000000000000000000000000000000000000000000000000000060045461181491906126e6565b60408201516118299063ffffffff16426126f9565b101561188c5760405162461bcd60e51b815260206004820152602c60248201527f436c61696d206d75737420776169742061746c65617374206d61784c3253746160448201526b3a32a9bcb731a232b630bc9760a11b6064820152608401610644565b600061189782612133565b905060028160038111156118ad576118ad612519565b14806118ca575060008160038111156118c8576118c8612519565b145b6119335760405162461bcd60e51b815260206004820152603460248201527f436c61696d20766572696669636174696f6e20696e2070726f6772657373206f604482015273391030b63932b0b23c9031b7b6b83632ba32b21760611b6064820152608401610644565b63ffffffff428116606084015243166080830152611950826119c1565b60008481526002602052604080822092909255905184917f37b700b61b9b4710dddb0c3316b2be7ef6088ed4b1d7bfe0fb98be8f9a163e1691a2505050565b60006119bb7f000000000000000000000000000000000000000000000000000000000000000083612624565b92915050565b80516020808301516040808501516060860151608087015160a088015160c089015194516000986119f698909796910161270c565b604051602081830303815290604052805190602001209050919050565b7f00000000000000000000000000000000000000000000000000000000000000006001547f00000000000000000000000000000000000000000000000000000000000000004281611a6657611a666125c2565b04031115611aa95760405162461bcd60e51b815260206004820152601060248201526f213934b233b29029b43aba3237bbb71760811b6044820152606401610644565b611ab2816119c1565b60008381526002602052604090205414611ade5760405162461bcd60e51b81526004016106449061259a565b60c08101516001600160a01b031615611b305760405162461bcd60e51b815260206004820152601460248201527321b630b4b69034b99031b430b63632b733b2b21760611b6044820152606401610644565b6001611b3b82612133565b6003811115611b4c57611b4c612519565b14611b995760405162461bcd60e51b815260206004820152601b60248201527f43656e736f72736869702074657374206e6f74207061737365642e00000000006044820152606401610644565b600154821115611be157600182905580516000556040518281527ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f79060200160405180910390a15b600160a0820152611bf1816119c1565b6000928352600260205260409092209190915550565b7f00000000000000000000000000000000000000000000000000000000000000006001547f00000000000000000000000000000000000000000000000000000000000000004281611c5a57611c5a6125c2565b040311611c9b5760405162461bcd60e51b815260206004820152600f60248201526e213934b233b290293ab73734b7339760891b6044820152606401610644565b611ca4816119c1565b60008381526002602052604090205414611cd05760405162461bcd60e51b81526004016106449061259a565b60008160a001516002811115611ce857611ce8612519565b14611d275760405162461bcd60e51b815260206004820152600f60248201526e21b630b4b6903932b9b7b63b32b21760891b6044820152606401610644565b60c08101516001600160a01b031615610e465760208101516001600160a01b0316611dd9576000828152600260205260408082209190915560c0820151905163a9059cbb60e01b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb9060440161151a565b60c0810180516000909152611ded826119c1565b506000839052600260205260405163a9059cbb60e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000060248301527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044015b6020604051808303816000875af1158015611e87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eab9190612549565b610b3d5760405162461bcd60e51b81526004016106449061256b565b7f00000000000000000000000000000000000000000000000000000000000000006001547f00000000000000000000000000000000000000000000000000000000000000004281611f1a57611f1a6125c2565b040311611f5b5760405162461bcd60e51b815260206004820152600f60248201526e213934b233b290293ab73734b7339760891b6044820152606401610644565b611f64816119c1565b60008381526002602052604090205414611f905760405162461bcd60e51b81526004016106449061259a565b60008160a001516002811115611fa857611fa8612519565b14611fe75760405162461bcd60e51b815260206004820152600f60248201526e21b630b4b6903932b9b7b63b32b21760891b6044820152606401610644565b60208101516001600160a01b031615610e465760c08101516001600160a01b031661209957600082815260026020908152604080832092909255820151905163a9059cbb60e01b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb9060440161151a565b60208101805160009091526120ad826119c1565b60008481526002602052604090819020919091555163a9059cbb60e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000060248301527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401611e68565b6000816060015163ffffffff1660000361214f57506002919050565b7f0000000000000000000000000000000000000000000000000000000000000000826060015163ffffffff164203101561218b57506003919050565b60006005836060015163ffffffff164203816121a9576121a96125c2565b608085015163ffffffff16919004019050437f0000000000000000000000000000000000000000000000000000000000000000818303116121ed57600192506121f2565b600092505b50505b919050565b6001600160a01b038116811461220f57600080fd5b50565b80356121f5816121fa565b803563ffffffff811681146121f557600080fd5b8035600381106121f557600080fd5b600060e0828403121561225257600080fd5b60405160e0810181811067ffffffffffffffff8211171561228357634e487b7160e01b600052604160045260246000fd5b6040528235815290508061229960208401612212565b60208201526122aa6040840161221d565b60408201526122bb6060840161221d565b60608201526122cc6080840161221d565b60808201526122dd60a08401612231565b60a08201526122ee60c08401612212565b60c08201525092915050565b600080610100838503121561230e57600080fd5b8235915061231f8460208501612240565b90509250929050565b6000806000610120848603121561233e57600080fd5b83359250602084013591506123568560408601612240565b90509250925092565b60006020828403121561237157600080fd5b5035919050565b6000806040838503121561238b57600080fd5b50508035926020909101359150565b803567ffffffffffffffff811681146121f557600080fd5b60008083601f8401126123c457600080fd5b50813567ffffffffffffffff8111156123dc57600080fd5b6020830191508360208285010111156123f457600080fd5b9250929050565b6000806000806000806080878903121561241457600080fd5b863567ffffffffffffffff8082111561242c57600080fd5b818901915089601f83011261244057600080fd5b81358181111561244f57600080fd5b8a60208260051b850101111561246457600080fd5b6020830198508097505061247a60208a0161239a565b955061248860408a01612212565b9450606089013591508082111561249e57600080fd5b506124ab89828a016123b2565b979a9699509497509295939492505050565b6000808284036101008112156124d257600080fd5b8335925060e0601f19820112156124e857600080fd5b506020830190509250929050565b600060e0828403121561250857600080fd5b6125128383612240565b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016004831061254357612543612519565b91905290565b60006020828403121561255b57600080fd5b8151801515811461251257600080fd5b6020808252601590820152742330b4b632b2102ba2aa24103a3930b739b332b91760591b604082015260600190565b6020808252600e908201526d24b73b30b634b21031b630b4b69760911b604082015260600190565b634e487b7160e01b600052601260045260246000fd5b6000602082840312156125ea57600080fd5b5051919050565b60006020828403121561260357600080fd5b8151612512816121fa565b634e487b7160e01b600052601160045260246000fd5b60008261264157634e487b7160e01b600052601260045260246000fd5b500490565b60c085901b6001600160c01b0319168152606084901b6bffffffffffffffffffffffff191660088201528183601c83013760009101601c019081529392505050565b634e487b7160e01b600052603260045260246000fd5b8183823760009101908152919050565b6000602082840312156126c057600080fd5b61251282612231565b6000602082840312156126db57600080fd5b8135612512816121fa565b808201808211156119bb576119bb61260e565b818103818111156119bb576119bb61260e565b87815260006bffffffffffffffffffffffff19808960601b16602084015263ffffffff60e01b808960e01b166034850152808860e01b166038850152808760e01b16603c850152506003851061276457612764612519565b60f89490941b60408301525060609190911b90911660418201526055019594505050505056fea2646970667358221220036a684abfcc9cc02cfdc32a80924fdecac949402d60f5ce77420727277ba63464736f6c63430008120033";

type VeaOutboxArbToGnosisConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: VeaOutboxArbToGnosisConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class VeaOutboxArbToGnosis__factory extends ContractFactory {
  constructor(...args: VeaOutboxArbToGnosisConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deposit: PromiseOrValue<BigNumberish>,
    _epochPeriod: PromiseOrValue<BigNumberish>,
    _minChallengePeriod: PromiseOrValue<BigNumberish>,
    _timeoutEpochs: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _routerArbToGnosis: PromiseOrValue<string>,
    _sequencerDelayLimit: PromiseOrValue<BigNumberish>,
    _maxMissingBlocks: PromiseOrValue<BigNumberish>,
    _routerChainId: PromiseOrValue<BigNumberish>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VeaOutboxArbToGnosis> {
    return super.deploy(
      _deposit,
      _epochPeriod,
      _minChallengePeriod,
      _timeoutEpochs,
      _amb,
      _routerArbToGnosis,
      _sequencerDelayLimit,
      _maxMissingBlocks,
      _routerChainId,
      _weth,
      overrides || {}
    ) as Promise<VeaOutboxArbToGnosis>;
  }
  override getDeployTransaction(
    _deposit: PromiseOrValue<BigNumberish>,
    _epochPeriod: PromiseOrValue<BigNumberish>,
    _minChallengePeriod: PromiseOrValue<BigNumberish>,
    _timeoutEpochs: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _routerArbToGnosis: PromiseOrValue<string>,
    _sequencerDelayLimit: PromiseOrValue<BigNumberish>,
    _maxMissingBlocks: PromiseOrValue<BigNumberish>,
    _routerChainId: PromiseOrValue<BigNumberish>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _deposit,
      _epochPeriod,
      _minChallengePeriod,
      _timeoutEpochs,
      _amb,
      _routerArbToGnosis,
      _sequencerDelayLimit,
      _maxMissingBlocks,
      _routerChainId,
      _weth,
      overrides || {}
    );
  }
  override attach(address: string): VeaOutboxArbToGnosis {
    return super.attach(address) as VeaOutboxArbToGnosis;
  }
  override connect(signer: Signer): VeaOutboxArbToGnosis__factory {
    return super.connect(signer) as VeaOutboxArbToGnosis__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeaOutboxArbToGnosisInterface {
    return new utils.Interface(_abi) as VeaOutboxArbToGnosisInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VeaOutboxArbToGnosis {
    return new Contract(address, _abi, signerOrProvider) as VeaOutboxArbToGnosis;
  }
}
