/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VeaOutboxMockArbToEth,
  VeaOutboxMockArbToEthInterface,
} from "../../../test/ArbitrumToEth/VeaOutboxMockArbToEth";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IArbSys",
        name: "_arbSys",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epochPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minChallengePeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeoutEpochs",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_veaInboxArbToEth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxMissingBlocks",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_challenger",
        type: "address",
      },
    ],
    name: "Challenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
    ],
    name: "MessageRelayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "VerificationStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "Verified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_requestedSequencerDelayLimit",
        type: "uint256",
      },
    ],
    name: "sequencerDelayLimitDecreaseRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newSequencerDelayLimit",
        type: "uint256",
      },
    ],
    name: "sequencerDelayLimitUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "BURN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "arbSys",
    outputs: [
      {
        internalType: "contract IArbSys",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "censorshipTestStatus",
    outputs: [
      {
        internalType: "enum VeaOutboxArbToEth.CensorshipTestStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_withdrawalAddress",
        type: "address",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositPlusReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "epochAt",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochNow",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executeSequencerDelayLimitDecreaseRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "hashClaim",
    outputs: [
      {
        internalType: "bytes32",
        name: "hashedClaim",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_msgId",
        type: "uint256",
      },
    ],
    name: "isMsgRelayed",
    outputs: [
      {
        internalType: "bool",
        name: "isRelayed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestVerifiedEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMissingBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minChallengePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "resolveDisputedClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerDelayLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerDelayLimitDecreaseRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "requestedsequencerDelayLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "startVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSequencerDelayLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "veaInboxArbToEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "verifySnapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawChallengeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawChallengerEscapeHatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawClaimDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawClaimerEscapeHatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type VeaOutboxMockArbToEthConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: VeaOutboxMockArbToEthConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class VeaOutboxMockArbToEth__factory extends ContractFactory {
  constructor(...args: VeaOutboxMockArbToEthConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _arbSys: PromiseOrValue<string>,
    _deposit: PromiseOrValue<BigNumberish>,
    _epochPeriod: PromiseOrValue<BigNumberish>,
    _minChallengePeriod: PromiseOrValue<BigNumberish>,
    _timeoutEpochs: PromiseOrValue<BigNumberish>,
    _veaInboxArbToEth: PromiseOrValue<string>,
    _bridge: PromiseOrValue<string>,
    _maxMissingBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VeaOutboxMockArbToEth> {
    return super.deploy(
      _arbSys,
      _deposit,
      _epochPeriod,
      _minChallengePeriod,
      _timeoutEpochs,
      _veaInboxArbToEth,
      _bridge,
      _maxMissingBlocks,
      overrides || {}
    ) as Promise<VeaOutboxMockArbToEth>;
  }
  override getDeployTransaction(
    _arbSys: PromiseOrValue<string>,
    _deposit: PromiseOrValue<BigNumberish>,
    _epochPeriod: PromiseOrValue<BigNumberish>,
    _minChallengePeriod: PromiseOrValue<BigNumberish>,
    _timeoutEpochs: PromiseOrValue<BigNumberish>,
    _veaInboxArbToEth: PromiseOrValue<string>,
    _bridge: PromiseOrValue<string>,
    _maxMissingBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _arbSys,
      _deposit,
      _epochPeriod,
      _minChallengePeriod,
      _timeoutEpochs,
      _veaInboxArbToEth,
      _bridge,
      _maxMissingBlocks,
      overrides || {}
    );
  }
  override attach(address: string): VeaOutboxMockArbToEth {
    return super.attach(address) as VeaOutboxMockArbToEth;
  }
  override connect(signer: Signer): VeaOutboxMockArbToEth__factory {
    return super.connect(signer) as VeaOutboxMockArbToEth__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeaOutboxMockArbToEthInterface {
    return new utils.Interface(_abi) as VeaOutboxMockArbToEthInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VeaOutboxMockArbToEth {
    return new Contract(address, _abi, signerOrProvider) as VeaOutboxMockArbToEth;
  }
}
