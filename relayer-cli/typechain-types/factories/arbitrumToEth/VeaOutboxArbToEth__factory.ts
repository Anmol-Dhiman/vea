/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { VeaOutboxArbToEth, VeaOutboxArbToEthInterface } from "../../arbitrumToEth/VeaOutboxArbToEth";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epochPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minChallengePeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeoutEpochs",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_veaInboxArbToEth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxMissingBlocks",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_challenger",
        type: "address",
      },
    ],
    name: "Challenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
    ],
    name: "MessageRelayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "VerificationStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "Verified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_requestedSequencerDelayLimit",
        type: "uint256",
      },
    ],
    name: "sequencerDelayLimitDecreaseRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newSequencerDelayLimit",
        type: "uint256",
      },
    ],
    name: "sequencerDelayLimitUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "BURN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "censorshipTestStatus",
    outputs: [
      {
        internalType: "enum VeaOutboxArbToEth.CensorshipTestStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_withdrawalAddress",
        type: "address",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositPlusReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "epochAt",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochNow",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executeSequencerDelayLimitDecreaseRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "hashClaim",
    outputs: [
      {
        internalType: "bytes32",
        name: "hashedClaim",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_msgId",
        type: "uint256",
      },
    ],
    name: "isMsgRelayed",
    outputs: [
      {
        internalType: "bool",
        name: "isRelayed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestVerifiedEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMissingBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minChallengePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "resolveDisputedClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerDelayLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerDelayLimitDecreaseRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "requestedsequencerDelayLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "startVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSequencerDelayLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "veaInboxArbToEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "verifySnapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawChallengeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawChallengerEscapeHatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawClaimDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawClaimerEscapeHatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b5060405162002cc238038062002cc28339810160408190526200003591620002ce565b60c08790526101208690526101408590526101608490526001600160a01b0380841660a05282166080526101808190526200006f620000ce565b6200007c6002886200034c565b60e08190526200008e8860026200036f565b6200009a91906200038f565b6101005261012051600190620000b190426200034c565b620000bd91906200038f565b600155506200040195505050505050565b60006080516001600160a01b031663ee35f3276040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000111573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001379190620003a5565b6001600160a01b031663ebea461d6040518163ffffffff1660e01b8152600401608060405180830381865afa15801562000175573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200019b9190620003ca565b5092505050600454811115620001e65760048190556040518181527f611c2e4a78552f908fb0eb2cc503efc1f947cde8574277ab3b0f10fdd510258b9060200160405180910390a150565b600454811015620002ae5760065415620002605760405162461bcd60e51b815260206004820152603160248201527f53657175656e636572206c696d697420646563726561736520726571756573746044820152701030b63932b0b23c903832b73234b7339760791b606482015260840160405180910390fd5b604080518082018252828152426020918201819052600584905560065590518281527fa552b382e128c9d0732f01f09502c18999aec5dce0ed78c5af0ea2274ce9bd7d910160405180910390a15b50565b80516001600160a01b0381168114620002c957600080fd5b919050565b600080600080600080600060e0888a031215620002ea57600080fd5b875196506020880151955060408801519450606088015193506200031160808901620002b1565b92506200032160a08901620002b1565b915060c0880151905092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b6000826200036a57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141762000389576200038962000336565b92915050565b8181038181111562000389576200038962000336565b600060208284031215620003b857600080fd5b620003c382620002b1565b9392505050565b60008060008060808587031215620003e157600080fd5b505082516020840151604085015160609095015191969095509092509050565b60805160a05160c05160e0516101005161012051610140516101605161018051612769620005596000396000818161051c0152611f1e015260008181610550015281816109140152818161188201528181611a760152611c820152600081816105d80152611eb20152600081816105840152818161093801528181610c4101528181610cdf0152818161145601528181611604015281816118a601528181611a9a0152611ca601526000818161049f015261126d01526000818161038a0152818161121a015261137f01526000818161060c01528181610c6d01528181610e4d01528181610e7a015281816113e201528181611be001528181611c4701528181611ded01528181611e5b01528181611f9201528181612120015261214d0152600081816104530152610a2201526000818161068d015281816107fa015281816109b301528181610a4c015261168501526127696000f3fe6080604052600436106101ee5760003560e01c80635f43a47f1161010d578063b5b7a184116100a0578063da2b7bc41161006f578063da2b7bc41461062e578063df19e6ff1461064e578063e78cea921461067b578063e813a755146106af578063fccc2813146106c557600080fd5b8063b5b7a18414610572578063b633b944146105a6578063c2114a16146105c6578063d0e30db0146105fa57600080fd5b8063930f28af116100dc578063930f28af146104d45780639588eca2146104f4578063aa22a1c61461050a578063b044397e1461053e57600080fd5b80635f43a47f1461042c57806369cd250d14610441578063836e344b1461048d5780638830dfbd146104c157600080fd5b806331ddf743116101855780634788cb38116101545780634788cb38146103ac57806349b4299e146103cc5780634a439cfe146103ec578063541adcca1461040c57600080fd5b806331ddf743146102eb5780633ce43cfd1461030b57806343b066d51461032b57806344df8e701461037857600080fd5b8063222ae786116101c1578063222ae786146102725780632639c0601461029557806327ee6bdd146102c257806331d14457146102d857600080fd5b806301139b68146101f3578063051d1970146102085780630c63fa841461023d5780630f0adca514610252575b600080fd5b610206610201366004612294565b6106da565b005b34801561021457600080fd5b50600554600654610223919082565b604080519283526020830191909152015b60405180910390f35b34801561024957600080fd5b506102066106e9565b34801561025e57600080fd5b5061020661026d3660046122c2565b610912565b34801561027e57600080fd5b50610287610c3a565b604051908152602001610234565b3480156102a157600080fd5b506102876102b03660046122f9565b60026020526000908152604090205481565b3480156102ce57600080fd5b5061028760015481565b6102066102e6366004612312565b610c6b565b3480156102f757600080fd5b50610206610306366004612395565b610ec3565b34801561031757600080fd5b50610206610326366004612457565b611163565b34801561033757600080fd5b506103686103463660046122f9565b600881901c600090815260036020526040902054600160ff9092161c81161490565b6040519015158152602001610234565b34801561038457600080fd5b506102877f000000000000000000000000000000000000000000000000000000000000000081565b3480156103b857600080fd5b506102066103c7366004612457565b6112aa565b3480156103d857600080fd5b506102066103e7366004612294565b61141f565b3480156103f857600080fd5b506102876104073660046122f9565b6115fd565b34801561041857600080fd5b50610287610427366004612490565b61162f565b34801561043857600080fd5b50610206611681565b34801561044d57600080fd5b506104757f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610234565b34801561049957600080fd5b506102877f000000000000000000000000000000000000000000000000000000000000000081565b6102066104cf3660046124b3565b611875565b3480156104e057600080fd5b506102066104ef366004612294565b611880565b34801561050057600080fd5b5061028760005481565b34801561051657600080fd5b506102877f000000000000000000000000000000000000000000000000000000000000000081565b34801561054a57600080fd5b506102877f000000000000000000000000000000000000000000000000000000000000000081565b34801561057e57600080fd5b506102877f000000000000000000000000000000000000000000000000000000000000000081565b3480156105b257600080fd5b506102066105c1366004612294565b611a74565b3480156105d257600080fd5b506102877f000000000000000000000000000000000000000000000000000000000000000081565b34801561060657600080fd5b506102877f000000000000000000000000000000000000000000000000000000000000000081565b34801561063a57600080fd5b50610206610649366004612294565b611c80565b34801561065a57600080fd5b5061066e610669366004612490565b611e94565b604051610234919061250c565b34801561068757600080fd5b506104757f000000000000000000000000000000000000000000000000000000000000000081565b3480156106bb57600080fd5b5061028760045481565b3480156106d157600080fd5b50610475600081565b6106e5828233611f5b565b5050565b6006546000036107555760405162461bcd60e51b815260206004820152602c60248201527f4e6f2070656e64696e672073657175656e636572206c696d697420646563726560448201526b30b9b2903932b8bab2b9ba1760a11b60648201526084015b60405180910390fd5b600454600654610765919061253c565b42116107ce5760405162461bcd60e51b815260206004820152603260248201527f53657175656e636572206c696d697420646563726561736520726571756573746044820152711034b99039ba34b636103832b73234b7339760711b606482015260840161074c565b6005805460009182905560068290556040805163ee35f32760e01b815290519192916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ee35f3279160048083019260209291908290030181865afa158015610845573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610869919061254f565b6001600160a01b031663ebea461d6040518163ffffffff1660e01b8152600401608060405180830381865afa1580156108a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ca919061256c565b50925050508181036106e55760048290556040518281527f611c2e4a78552f908fb0eb2cc503efc1f947cde8574277ab3b0f10fdd510258b9060200160405180910390a15050565b7f00000000000000000000000000000000000000000000000000000000000000006001547f00000000000000000000000000000000000000000000000000000000000000004281610965576109656125a2565b040311156109a85760405162461bcd60e51b815260206004820152601060248201526f213934b233b29029b43aba3237bbb71760811b604482015260640161074c565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a205760405162461bcd60e51b815260206004820181905260248201527f4e6f742066726f6d206e617469766520617262697472756d206272696467652e604482015260640161074c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ab5d89436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acc919061254f565b6001600160a01b03166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d919061254f565b6001600160a01b031614610b7c5760405162461bcd60e51b81526020600482015260166024820152753b32b0a4b73137bc20b9312a37a2ba341037b7363c9760511b604482015260640161074c565b60015483118015610b8c57508115155b15610bcf57600183905560008290556040518381527ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f79060200160405180910390a15b610bd88161162f565b60008481526002602052604090205403610c35578051829003610c0157600160a0820152610c1c565b60c08101516001600160a01b031615610c1c57600260a08201525b610c258161162f565b6000848152600260205260409020555b505050565b6000610c667f0000000000000000000000000000000000000000000000000000000000000000426125b8565b905090565b7f0000000000000000000000000000000000000000000000000000000000000000341015610cdb5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420636c61696d206465706f7369742e0000000000604482015260640161074c565b60017f00000000000000000000000000000000000000000000000000000000000000004281610d0c57610d0c6125a2565b04038214610d4d5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21032b837b1b41760911b604482015260640161074c565b80610d6a5760405162461bcd60e51b815260040161074c906125da565b60008281526002602052604090205415610dbc5760405162461bcd60e51b815260206004820152601360248201527221b630b4b69030b63932b0b23c9036b0b2329760691b604482015260640161074c565b6040805160e0810182528281523360208201524263ffffffff16918101919091526000606082018190526080820181905260a0820181905260c0820152610e029061162f565b6000838152600260209081526040918290209290925551828152839133917fd95107f4584744c6c893a04c43058aadd1ce8aac8ca5d64140eaf277de6c1d57910160405180910390a37f00000000000000000000000000000000000000000000000000000000000000003411156106e5576000610e9f7f000000000000000000000000000000000000000000000000000000000000000034612602565b604051909150339082156108fc029083906000818181858888f15050505050505050565b60408510610f055760405162461bcd60e51b815260206004820152600f60248201526e283937b7b3103a37b7903637b7339760891b604482015260640161074c565b600084848484604051602001610f1e9493929190612615565b604051602081830303815290604052805190602001209050806000526020600020905060005b86811015610f9e576000888883818110610f6057610f60612657565b90506020020135905082811115610f8557826000528060205260406000209250610f95565b8060005282602052604060002092505b50600101610f44565b508060005414610fe15760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210383937b7b31760911b604482015260640161074c565b600885901c66ffffffffffffff1660008181526003602052604090205460ff87169080821c600116156110565760405162461bcd60e51b815260206004820152601760248201527f4d65737361676520616c72656164792072656c61796564000000000000000000604482015260640161074c565b6000838152600360205260408082206001851b84179055516001600160a01b03891690611086908990899061266d565b6000604051808303816000865af19150503d80600081146110c3576040519150601f19603f3d011682016040523d82523d6000602084013e6110c8565b606091505b50509050806111195760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2063616c6c20636f6e7472616374000000000000000000604482015260640161074c565b60405167ffffffffffffffff8a1681527f54303fab361bc52c2f1f56ace7351189582264f74ce47a6e7c3f478d64c429439060200160405180910390a15050505050505050505050565b61117561042736839003830183612490565b600083815260026020526040902054146111a15760405162461bcd60e51b815260040161074c906125da565b60026111b360c0830160a0840161267d565b60028111156111c4576111c46124f6565b146112055760405162461bcd60e51b815260206004820152601160248201527021b430b63632b733b2903330b4b632b21760791b604482015260640161074c565b600082815260026020526040808220829055517f000000000000000000000000000000000000000000000000000000000000000080156108fc029183818181858288f15061125f93505060e0840191505060c08301612698565b6001600160a01b03166108fc7f00000000000000000000000000000000000000000000000000000000000000009081150290604051600060405180830381858888f150505050505050565b6112bc61042736839003830183612490565b600083815260026020526040902054146112e85760405162461bcd60e51b815260040161074c906125da565b60016112fa60c0830160a0840161267d565b600281111561130b5761130b6124f6565b146113485760405162461bcd60e51b815260206004820152600d60248201526c21b630b4b6903330b4b632b21760991b604482015260640161074c565b600082815260026020526040812081905561136960e0830160c08401612698565b6001600160a01b0316146113c4576040516000907f000000000000000000000000000000000000000000000000000000000000000080156108fc029183818181858288f15061125f9350506040840191505060208301612698565b6113d46040820160208301612698565b6001600160a01b03166108fc7f00000000000000000000000000000000000000000000000000000000000000009081150290604051600060405180830381858888f150505050505050565b6114288161162f565b600083815260026020526040902054146114545760405162461bcd60e51b815260040161074c906125da565b7f0000000000000000000000000000000000000000000000000000000000000000600454611482919061253c565b60408201516114979063ffffffff1642612602565b10156114fa5760405162461bcd60e51b815260206004820152602c60248201527f436c61696d206d75737420776169742061746c65617374206d61784c3253746160448201526b3a32a9bcb731a232b630bc9760a11b606482015260840161074c565b600061150582611e94565b9050600281600381111561151b5761151b6124f6565b148061153857506000816003811115611536576115366124f6565b145b6115a15760405162461bcd60e51b815260206004820152603460248201527f436c61696d20766572696669636174696f6e20696e2070726f6772657373206f604482015273391030b63932b0b23c9031b7b6b83632ba32b21760611b606482015260840161074c565b63ffffffff4281166060840152431660808301526115be8261162f565b60008481526002602052604080822092909255905184917f37b700b61b9b4710dddb0c3316b2be7ef6088ed4b1d7bfe0fb98be8f9a163e1691a2505050565b60006116297f0000000000000000000000000000000000000000000000000000000000000000836125b8565b92915050565b80516020808301516040808501516060860151608087015160a088015160c089015194516000986116649890979691016126b5565b604051602081830303815290604052805190602001209050919050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ee35f3276040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611705919061254f565b6001600160a01b031663ebea461d6040518163ffffffff1660e01b8152600401608060405180830381865afa158015611742573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611766919061256c565b50925050506004548111156117b05760048190556040518181527f611c2e4a78552f908fb0eb2cc503efc1f947cde8574277ab3b0f10fdd510258b9060200160405180910390a150565b60045481101561187257600654156118245760405162461bcd60e51b815260206004820152603160248201527f53657175656e636572206c696d697420646563726561736520726571756573746044820152701030b63932b0b23c903832b73234b7339760791b606482015260840161074c565b604080518082018252828152426020918201819052600584905560065590518281527fa552b382e128c9d0732f01f09502c18999aec5dce0ed78c5af0ea2274ce9bd7d910160405180910390a15b50565b610c35838383611f5b565b7f00000000000000000000000000000000000000000000000000000000000000006001547f000000000000000000000000000000000000000000000000000000000000000042816118d3576118d36125a2565b040311156119165760405162461bcd60e51b815260206004820152601060248201526f213934b233b29029b43aba3237bbb71760811b604482015260640161074c565b61191f8161162f565b6000838152600260205260409020541461194b5760405162461bcd60e51b815260040161074c906125da565b60c08101516001600160a01b03161561199d5760405162461bcd60e51b815260206004820152601460248201527321b630b4b69034b99031b430b63632b733b2b21760611b604482015260640161074c565b60016119a882611e94565b60038111156119b9576119b96124f6565b14611a065760405162461bcd60e51b815260206004820152601b60248201527f43656e736f72736869702074657374206e6f74207061737365642e0000000000604482015260640161074c565b600154821115611a4e57600182905580516000556040518281527ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f79060200160405180910390a15b600160a0820152611a5e8161162f565b6000928352600260205260409092209190915550565b7f00000000000000000000000000000000000000000000000000000000000000006001547f00000000000000000000000000000000000000000000000000000000000000004281611ac757611ac76125a2565b040311611b085760405162461bcd60e51b815260206004820152600f60248201526e213934b233b290293ab73734b7339760891b604482015260640161074c565b611b118161162f565b60008381526002602052604090205414611b3d5760405162461bcd60e51b815260040161074c906125da565b60008160a001516002811115611b5557611b556124f6565b14611b945760405162461bcd60e51b815260206004820152600f60248201526e21b630b4b6903932b9b7b63b32b21760891b604482015260640161074c565b60c08101516001600160a01b0316156106e55760208101516001600160a01b0316611c185760008281526002602052604080822082905560c083015190516001600160a01b03909116917f000000000000000000000000000000000000000000000000000000000000000080156108fc02929091818181858888f150505050505050565b60c0810180516000909152611c2c8261162f565b50600083815260026020526040516001600160a01b038316917f000000000000000000000000000000000000000000000000000000000000000080156108fc02929091818181858888f15050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001547f00000000000000000000000000000000000000000000000000000000000000004281611cd357611cd36125a2565b040311611d145760405162461bcd60e51b815260206004820152600f60248201526e213934b233b290293ab73734b7339760891b604482015260640161074c565b611d1d8161162f565b60008381526002602052604090205414611d495760405162461bcd60e51b815260040161074c906125da565b60008160a001516002811115611d6157611d616124f6565b14611da05760405162461bcd60e51b815260206004820152600f60248201526e21b630b4b6903932b9b7b63b32b21760891b604482015260640161074c565b60208101516001600160a01b0316156106e55760c08101516001600160a01b0316611e255760008281526002602090815260408083208390559083015190516001600160a01b03909116917f000000000000000000000000000000000000000000000000000000000000000080156108fc02929091818181858888f150505050505050565b6020810180516000909152611e398261162f565b6000848152600260205260408082209290925590516001600160a01b038316917f000000000000000000000000000000000000000000000000000000000000000080156108fc02929091818181858888f15050505050505050565b6000816060015163ffffffff16600003611eb057506002919050565b7f0000000000000000000000000000000000000000000000000000000000000000826060015163ffffffff1642031015611eec57506003919050565b6000600c836060015163ffffffff16420381611f0a57611f0a6125a2565b608085015163ffffffff16919004019050437f000000000000000000000000000000000000000000000000000000000000000081830311611f4e5760019250611f53565b600092505b50505b919050565b611f648261162f565b60008481526002602052604090205414611f905760405162461bcd60e51b815260040161074c906125da565b7f00000000000000000000000000000000000000000000000000000000000000003410156120005760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e74206368616c6c656e6765206465706f7369742e00604482015260640161074c565b60c08201516001600160a01b03161561205b5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20616c7265616479206368616c6c656e6765642e00000000000000604482015260640161074c565b60008260a001516002811115612073576120736124f6565b146120c05760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792076657269666965642e000000000000000000604482015260640161074c565b6001600160a01b03811660c08301526120d88261162f565b6000848152600260205260408082209290925590516001600160a01b0383169185917fcfe09ca25f55d949baba5e280f5750c9ba4b9048fca5532f916067d433afe4d79190a37f0000000000000000000000000000000000000000000000000000000000000000341115610c355760006121727f000000000000000000000000000000000000000000000000000000000000000034612602565b604051909150339082156108fc029083906000818181858888f1505050505050505050565b6001600160a01b038116811461187257600080fd5b8035611f5681612197565b803563ffffffff81168114611f5657600080fd5b803560038110611f5657600080fd5b600060e082840312156121ec57600080fd5b60405160e0810181811067ffffffffffffffff8211171561221d57634e487b7160e01b600052604160045260246000fd5b60405282358152905080612233602084016121ac565b6020820152612244604084016121b7565b6040820152612255606084016121b7565b6060820152612266608084016121b7565b608082015261227760a084016121cb565b60a082015261228860c084016121ac565b60c08201525092915050565b60008061010083850312156122a857600080fd5b823591506122b984602085016121da565b90509250929050565b600080600061012084860312156122d857600080fd5b83359250602084013591506122f085604086016121da565b90509250925092565b60006020828403121561230b57600080fd5b5035919050565b6000806040838503121561232557600080fd5b50508035926020909101359150565b803567ffffffffffffffff81168114611f5657600080fd5b60008083601f84011261235e57600080fd5b50813567ffffffffffffffff81111561237657600080fd5b60208301915083602082850101111561238e57600080fd5b9250929050565b600080600080600080608087890312156123ae57600080fd5b863567ffffffffffffffff808211156123c657600080fd5b818901915089601f8301126123da57600080fd5b8135818111156123e957600080fd5b8a60208260051b85010111156123fe57600080fd5b6020830198508097505061241460208a01612334565b955061242260408a016121ac565b9450606089013591508082111561243857600080fd5b5061244589828a0161234c565b979a9699509497509295939492505050565b60008082840361010081121561246c57600080fd5b8335925060e0601f198201121561248257600080fd5b506020830190509250929050565b600060e082840312156124a257600080fd5b6124ac83836121da565b9392505050565b600080600061012084860312156124c957600080fd5b833592506124da85602086016121da565b91506101008401356124eb81612197565b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6020810160048310612520576125206124f6565b91905290565b634e487b7160e01b600052601160045260246000fd5b8082018082111561162957611629612526565b60006020828403121561256157600080fd5b81516124ac81612197565b6000806000806080858703121561258257600080fd5b505082516020840151604085015160609095015191969095509092509050565b634e487b7160e01b600052601260045260246000fd5b6000826125d557634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600e908201526d24b73b30b634b21031b630b4b69760911b604082015260600190565b8181038181111561162957611629612526565b60c085901b6001600160c01b0319168152606084901b6bffffffffffffffffffffffff191660088201528183601c83013760009101601c019081529392505050565b634e487b7160e01b600052603260045260246000fd5b8183823760009101908152919050565b60006020828403121561268f57600080fd5b6124ac826121cb565b6000602082840312156126aa57600080fd5b81356124ac81612197565b87815260006bffffffffffffffffffffffff19808960601b16602084015263ffffffff60e01b808960e01b166034850152808860e01b166038850152808760e01b16603c850152506003851061270d5761270d6124f6565b60f89490941b60408301525060609190911b90911660418201526055019594505050505056fea2646970667358221220bfa1c64d66cec2fc1421a401c2f451b3a073da716ebc61e6324892eca4d38a6464736f6c63430008120033";

type VeaOutboxArbToEthConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: VeaOutboxArbToEthConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class VeaOutboxArbToEth__factory extends ContractFactory {
  constructor(...args: VeaOutboxArbToEthConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deposit: PromiseOrValue<BigNumberish>,
    _epochPeriod: PromiseOrValue<BigNumberish>,
    _minChallengePeriod: PromiseOrValue<BigNumberish>,
    _timeoutEpochs: PromiseOrValue<BigNumberish>,
    _veaInboxArbToEth: PromiseOrValue<string>,
    _bridge: PromiseOrValue<string>,
    _maxMissingBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VeaOutboxArbToEth> {
    return super.deploy(
      _deposit,
      _epochPeriod,
      _minChallengePeriod,
      _timeoutEpochs,
      _veaInboxArbToEth,
      _bridge,
      _maxMissingBlocks,
      overrides || {}
    ) as Promise<VeaOutboxArbToEth>;
  }
  override getDeployTransaction(
    _deposit: PromiseOrValue<BigNumberish>,
    _epochPeriod: PromiseOrValue<BigNumberish>,
    _minChallengePeriod: PromiseOrValue<BigNumberish>,
    _timeoutEpochs: PromiseOrValue<BigNumberish>,
    _veaInboxArbToEth: PromiseOrValue<string>,
    _bridge: PromiseOrValue<string>,
    _maxMissingBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _deposit,
      _epochPeriod,
      _minChallengePeriod,
      _timeoutEpochs,
      _veaInboxArbToEth,
      _bridge,
      _maxMissingBlocks,
      overrides || {}
    );
  }
  override attach(address: string): VeaOutboxArbToEth {
    return super.attach(address) as VeaOutboxArbToEth;
  }
  override connect(signer: Signer): VeaOutboxArbToEth__factory {
    return super.connect(signer) as VeaOutboxArbToEth__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeaOutboxArbToEthInterface {
    return new utils.Interface(_abi) as VeaOutboxArbToEthInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VeaOutboxArbToEth {
    return new Contract(address, _abi, signerOrProvider) as VeaOutboxArbToEth;
  }
}
