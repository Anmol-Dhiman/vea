/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VeaOutboxArbToGnosisDevnet,
  VeaOutboxArbToGnosisDevnetInterface,
} from "../../../devnets/arbitrumToGnosis/VeaOutboxArbToGnosisDevnet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epochPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minChallengePeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeoutEpochs",
        type: "uint256",
      },
      {
        internalType: "contract IAMB",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_routerArbToGnosis",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sequencerDelayLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxMissingBlocks",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_routerChainId",
        type: "uint256",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_challenger",
        type: "address",
      },
    ],
    name: "Challenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
    ],
    name: "MessageRelayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "VerificationStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "Verified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newSequencerDelayLimit",
        type: "uint256",
      },
    ],
    name: "sequencerDelayLimitUpdateReceived",
    type: "event",
  },
  {
    inputs: [],
    name: "amb",
    outputs: [
      {
        internalType: "contract IAMB",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "censorshipTestStatus",
    outputs: [
      {
        internalType: "enum VeaOutboxArbToGnosis.CensorshipTestStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devnetOperator",
        type: "address",
      },
    ],
    name: "changeDevnetOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositPlusReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateroot",
        type: "bytes32",
      },
    ],
    name: "devnetAdvanceState",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "devnetOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "epochAt",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochNow",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "hashClaim",
    outputs: [
      {
        internalType: "bytes32",
        name: "hashedClaim",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_msgId",
        type: "uint256",
      },
    ],
    name: "isMsgRelayed",
    outputs: [
      {
        internalType: "bool",
        name: "isRelayed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestVerifiedEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMissingBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minChallengePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "resolveDisputedClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "routerArbToGnosis",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerDelayLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "startVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timestampDelayUpdated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newSequencerDelayLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "updateSequencerDelayLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "verifySnapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawChallengeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawChallengerEscapeHatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawClaimDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawClaimerEscapeHatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101e06040523480156200001257600080fd5b5060405162002c8b38038062002c8b83398101604081905262000035916200012f565b60e08a90526101608990526101a08790526101808890526001600160a01b0380871660805280861660a05260048590556101c0849052610140839052811660c052898989898989898989896200008d60028b620001e0565b610100819052620000a08b600262000203565b620000ac919062000223565b6101205261016051600190620000c39042620001e0565b620000cf919062000223565b6001819055505050505050505050505033600660006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050505050505050505062000239565b6001600160a01b03811681146200012c57600080fd5b50565b6000806000806000806000806000806101408b8d0312156200015057600080fd5b8a51995060208b0151985060408b0151975060608b0151965060808b0151620001798162000116565b60a08c01519096506200018c8162000116565b8095505060c08b0151935060e08b015192506101008b015191506101208b0151620001b78162000116565b809150509295989b9194979a5092959850565b634e487b7160e01b600052601160045260246000fd5b600082620001fe57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176200021d576200021d620001ca565b92915050565b818103818111156200021d576200021d620001ca565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c051612897620003f4600039600081816105bd01526122500152600081816105f10152818161099b01528181611b1101528181611c9c0152611f5c01526000818161067901526121e4015260008181610625015281816109bf01528181610d50015281816119ff01528181611b3501528181611cc00152611f8001526000818161055301528181610b360152610e690152600081816104df0152818161168f015261187f0152600081816104150152818161159e01526117d10152600081816106ad0152818161079401528181611083015281816118fa01528181611e1501528181611eaa015281816120d50152612171015260008181610394015281816107ba015281816110a9015281816115c401528181611630015281816117f7015281816118a50152818161192001528181611e3b01528181611ed0015281816120fb01526121970152600081816106e101528181610c230152610f5601526000818161025d01528181610a3a01528181610ab401528181610b9801528181610d8501528181610de70152610ecb01526128976000f3fe6080604052600436106102045760003560e01c80637ffc2a6e11610118578063b5b7a184116100a0578063d5e6a9df1161006f578063d5e6a9df146106cf578063da2b7bc414610703578063df19e6ff14610723578063e813a75514610750578063eedcf2a91461076657600080fd5b8063b5b7a18414610613578063b633b94414610647578063c2114a1614610667578063d0e30db01461069b57600080fd5b80638d96fdea116100e75780638d96fdea14610541578063930f28af146105755780639588eca214610595578063aa22a1c6146105ab578063b044397e146105df57600080fd5b80637ffc2a6e146104b7578063836e344b146104cd5780638a619a71146105015780638ad3a8f71461052157600080fd5b806331ddf7431161019b57806344df8e701161016a57806344df8e70146104035780634788cb381461043757806349b4299e146104575780634a439cfe14610477578063541adcca1461049757600080fd5b806331ddf743146103425780633ce43cfd146103625780633fc8cef31461038257806343b066d5146103b657600080fd5b80632639c060116101d75780632639c060146102bf57806327ee6bdd146102ec5780632c1925191461030257806331d144571461032257600080fd5b806301139b68146102095780630f0adca51461022b5780631062b39a1461024b578063222ae7861461029c575b600080fd5b34801561021557600080fd5b5061022961022436600461240d565b610779565b005b34801561023757600080fd5b5061022961024636600461243b565b610999565b34801561025757600080fd5b5061027f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102a857600080fd5b506102b1610d49565b604051908152602001610293565b3480156102cb57600080fd5b506102b16102da366004612472565b60026020526000908152604090205481565b3480156102f857600080fd5b506102b160015481565b34801561030e57600080fd5b5061022961031d36600461248b565b610d7a565b34801561032e57600080fd5b5061022961033d36600461248b565b611051565b34801561034e57600080fd5b5061022961035d36600461250e565b61123c565b34801561036e57600080fd5b5061022961037d3660046125d0565b6114dc565b34801561038e57600080fd5b5061027f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103c257600080fd5b506103f36103d1366004612472565b600881901c600090815260036020526040902054600160ff9092161c81161490565b6040519015158152602001610293565b34801561040f57600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b34801561044357600080fd5b5061022961045236600461240d565b611716565b34801561046357600080fd5b5061022961047236600461240d565b611951565b34801561048357600080fd5b506102b1610492366004612472565b6119f8565b3480156104a357600080fd5b506102b16104b2366004612609565b611a2a565b3480156104c357600080fd5b506102b160055481565b3480156104d957600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b34801561050d57600080fd5b5061022961051c36600461262c565b611a7c565b34801561052d57600080fd5b5060065461027f906001600160a01b031681565b34801561054d57600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b34801561058157600080fd5b5061022961059036600461240d565b611b0f565b3480156105a157600080fd5b506102b160005481565b3480156105b757600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b3480156105eb57600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b34801561061f57600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b34801561065357600080fd5b5061022961066236600461240d565b611c9a565b34801561067357600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b3480156106a757600080fd5b506102b17f000000000000000000000000000000000000000000000000000000000000000081565b3480156106db57600080fd5b5061027f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561070f57600080fd5b5061022961071e36600461240d565b611f5a565b34801561072f57600080fd5b5061074361073e366004612609565b6121c6565b604051610293919061265f565b34801561075c57600080fd5b506102b160045481565b61022961077436600461248b565b61228d565b6040516323b872dd60e01b81523360048201523060248201527f000000000000000000000000000000000000000000000000000000000000000060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f9190612679565b6108545760405162461bcd60e51b815260040161084b9061269b565b60405180910390fd5b61085d81611a2a565b600083815260026020526040902054146108895760405162461bcd60e51b815260040161084b906126ca565b60c08101516001600160a01b0316156108e45760405162461bcd60e51b815260206004820152601960248201527f436c61696d20616c7265616479206368616c6c656e6765642e00000000000000604482015260640161084b565b60008160a0015160028111156108fc576108fc612649565b146109495760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792076657269666965642e000000000000000000604482015260640161084b565b3360c082015261095881611a2a565b600083815260026020526040808220929092559051339184917fcfe09ca25f55d949baba5e280f5750c9ba4b9048fca5532f916067d433afe4d79190a35050565b7f00000000000000000000000000000000000000000000000000000000000000006001547f000000000000000000000000000000000000000000000000000000000000000042816109ec576109ec6126f2565b04031115610a2f5760405162461bcd60e51b815260206004820152601060248201526f213934b233b29029b43aba3237bbb71760811b604482015260640161084b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ab25760405162461bcd60e51b815260206004820152602260248201527f4e6f742066726f6d206e617469766520476e6f73697320414d42206272696467604482015261329760f11b606482015260840161084b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639e307dff6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b349190612708565b7f000000000000000000000000000000000000000000000000000000000000000014610b965760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21031b430b4b71034b21760791b604482015260640161084b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d67bdd256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c189190612721565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610c8b5760405162461bcd60e51b815260206004820152601060248201526f2737ba10333937b6903937baba32b91760811b604482015260640161084b565b60015483118015610c9b57508115155b15610cde57600183905560008290556040518381527ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f79060200160405180910390a15b610ce781611a2a565b60008481526002602052604090205403610d44578051829003610d1057600160a0820152610d2b565b60c08101516001600160a01b031615610d2b57600260a08201525b610d3481611a2a565b6000848152600260205260409020555b505050565b6000610d757f00000000000000000000000000000000000000000000000000000000000000004261273e565b905090565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610de55760405162461bcd60e51b815260206004820152601060248201526f2737ba10333937b690313934b233b29760811b604482015260640161084b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639e307dff6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e679190612708565b7f000000000000000000000000000000000000000000000000000000000000000014610ec95760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21031b430b4b71034b21760791b604482015260640161084b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d67bdd256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4b9190612721565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610fbe5760405162461bcd60e51b815260206004820152601060248201526f2737ba10333937b6903937baba32b91760811b604482015260640161084b565b80600554106110065760405162461bcd60e51b815260206004820152601460248201527326b2b9b9b0b3b29034b99037baba3230ba32b21760611b604482015260640161084b565b816004541461104d57600482905560058190556040518281527f684f6fb71cbcb798156dcca2a95dbd142fa1f8957637833b1897ab89e05aa7079060200160405180910390a15b5050565b6006546001600160a01b0316331461106857600080fd5b6040516323b872dd60e01b81523360048201523060248201527f000000000000000000000000000000000000000000000000000000000000000060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156110fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111e9190612679565b61113a5760405162461bcd60e51b815260040161084b9061269b565b806111575760405162461bcd60e51b815260040161084b906126ca565b600082815260026020526040902054156111a95760405162461bcd60e51b815260206004820152601360248201527221b630b4b69030b63932b0b23c9036b0b2329760691b604482015260640161084b565b6040805160e0810182528281523360208201524263ffffffff16918101919091526000606082018190526080820181905260a0820181905260c08201526111ef90611a2a565b6000838152600260209081526040918290209290925551828152839133917fd95107f4584744c6c893a04c43058aadd1ce8aac8ca5d64140eaf277de6c1d57910160405180910390a35050565b6040851061127e5760405162461bcd60e51b815260206004820152600f60248201526e283937b7b3103a37b7903637b7339760891b604482015260640161084b565b6000848484846040516020016112979493929190612760565b604051602081830303815290604052805190602001209050806000526020600020905060005b868110156113175760008888838181106112d9576112d96127a2565b905060200201359050828111156112fe5782600052806020526040600020925061130e565b8060005282602052604060002092505b506001016112bd565b50806000541461135a5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210383937b7b31760911b604482015260640161084b565b600885901c66ffffffffffffff1660008181526003602052604090205460ff87169080821c600116156113cf5760405162461bcd60e51b815260206004820152601760248201527f4d65737361676520616c72656164792072656c61796564000000000000000000604482015260640161084b565b6000838152600360205260408082206001851b84179055516001600160a01b038916906113ff90899089906127b8565b6000604051808303816000865af19150503d806000811461143c576040519150601f19603f3d011682016040523d82523d6000602084013e611441565b606091505b50509050806114925760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2063616c6c20636f6e7472616374000000000000000000604482015260640161084b565b60405167ffffffffffffffff8a1681527f54303fab361bc52c2f1f56ace7351189582264f74ce47a6e7c3f478d64c429439060200160405180910390a15050505050505050505050565b6114ee6104b236839003830183612609565b6000838152600260205260409020541461151a5760405162461bcd60e51b815260040161084b906126ca565b600261152c60c0830160a084016127c8565b600281111561153d5761153d612649565b1461157e5760405162461bcd60e51b815260206004820152601160248201527021b430b63632b733b2903330b4b632b21760791b604482015260640161084b565b6000828152600260205260408082209190915551630852cd8d60e31b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b15801561161057600080fd5b505af1158015611624573d6000803e3d6000fd5b50506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016915063a9059cbb905061166960e0840160c0850161262c565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201527f000000000000000000000000000000000000000000000000000000000000000060248201526044015b6020604051808303816000875af11580156116d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fa9190612679565b61104d5760405162461bcd60e51b815260040161084b9061269b565b61171f81611a2a565b6000838152600260205260409020541461174b5760405162461bcd60e51b815260040161084b906126ca565b60018160a00151600281111561176357611763612649565b146117a05760405162461bcd60e51b815260206004820152600d60248201526c21b630b4b6903330b4b632b21760991b604482015260640161084b565b60008281526002602052604081205560c08101516001600160a01b0316156118d657604051630852cd8d60e31b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342966c6890602401600060405180830381600087803b15801561184357600080fd5b505af1158015611857573d6000803e3d6000fd5b50505050602081015160405163a9059cbb60e01b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016116b7565b602081015160405163a9059cbb60e01b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016116b7565b6006546001600160a01b0316331461196857600080fd5b61197181611a2a565b6000838152600260205260409020541461199d5760405162461bcd60e51b815260040161084b906126ca565b63ffffffff4281166060830152431660808201526119ba81611a2a565b60008381526002602052604080822092909255905183917f37b700b61b9b4710dddb0c3316b2be7ef6088ed4b1d7bfe0fb98be8f9a163e1691a25050565b6000611a247f00000000000000000000000000000000000000000000000000000000000000008361273e565b92915050565b80516020808301516040808501516060860151608087015160a088015160c08901519451600098611a5f9890979691016127e3565b604051602081830303815290604052805190602001209050919050565b6006546001600160a01b03163314611a9357600080fd5b6006546001600160a01b03163314611aed5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420546573746e6574204f70657261746f720000000000000000604482015260640161084b565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001547f00000000000000000000000000000000000000000000000000000000000000004281611b6257611b626126f2565b04031115611ba55760405162461bcd60e51b815260206004820152601060248201526f213934b233b29029b43aba3237bbb71760811b604482015260640161084b565b611bae81611a2a565b60008381526002602052604090205414611bda5760405162461bcd60e51b815260040161084b906126ca565b60c08101516001600160a01b031615611c2c5760405162461bcd60e51b815260206004820152601460248201527321b630b4b69034b99031b430b63632b733b2b21760611b604482015260640161084b565b600154821115611c7457600182905580516000556040518281527ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f79060200160405180910390a15b600160a0820152611c8481611a2a565b6000928352600260205260409092209190915550565b7f00000000000000000000000000000000000000000000000000000000000000006001547f00000000000000000000000000000000000000000000000000000000000000004281611ced57611ced6126f2565b040311611d2e5760405162461bcd60e51b815260206004820152600f60248201526e213934b233b290293ab73734b7339760891b604482015260640161084b565b611d3781611a2a565b60008381526002602052604090205414611d635760405162461bcd60e51b815260040161084b906126ca565b60008160a001516002811115611d7b57611d7b612649565b14611dba5760405162461bcd60e51b815260206004820152600f60248201526e21b630b4b6903932b9b7b63b32b21760891b604482015260640161084b565b60c08101516001600160a01b03161561104d5760208101516001600160a01b0316611e6c576000828152600260205260408082209190915560c0820151905163a9059cbb60e01b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016116b7565b60c0810180516000909152611e8082611a2a565b506000839052600260205260405163a9059cbb60e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000060248301527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044015b6020604051808303816000875af1158015611f1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3e9190612679565b610d445760405162461bcd60e51b815260040161084b9061269b565b7f00000000000000000000000000000000000000000000000000000000000000006001547f00000000000000000000000000000000000000000000000000000000000000004281611fad57611fad6126f2565b040311611fee5760405162461bcd60e51b815260206004820152600f60248201526e213934b233b290293ab73734b7339760891b604482015260640161084b565b611ff781611a2a565b600083815260026020526040902054146120235760405162461bcd60e51b815260040161084b906126ca565b60008160a00151600281111561203b5761203b612649565b1461207a5760405162461bcd60e51b815260206004820152600f60248201526e21b630b4b6903932b9b7b63b32b21760891b604482015260640161084b565b60208101516001600160a01b03161561104d5760c08101516001600160a01b031661212c57600082815260026020908152604080832092909255820151905163a9059cbb60e01b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016116b7565b602081018051600090915261214082611a2a565b60008481526002602052604090819020919091555163a9059cbb60e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000060248301527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401611efb565b6000816060015163ffffffff166000036121e257506002919050565b7f0000000000000000000000000000000000000000000000000000000000000000826060015163ffffffff164203101561221e57506003919050565b60006005836060015163ffffffff1642038161223c5761223c6126f2565b608085015163ffffffff16919004019050437f0000000000000000000000000000000000000000000000000000000000000000818303116122805760019250612285565b600092505b50505b919050565b6122978282611051565b6040805160e0810182528281523360208201524263ffffffff16918101919091526000606082018190526080820181905260a0820181905260c08201526122de8382611951565b63ffffffff4281166060830152431660808201526122fc8382611b0f565b600160a0820152610d448382611716565b6001600160a01b038116811461232257600080fd5b50565b80356122888161230d565b803563ffffffff8116811461228857600080fd5b80356003811061228857600080fd5b600060e0828403121561236557600080fd5b60405160e0810181811067ffffffffffffffff8211171561239657634e487b7160e01b600052604160045260246000fd5b604052823581529050806123ac60208401612325565b60208201526123bd60408401612330565b60408201526123ce60608401612330565b60608201526123df60808401612330565b60808201526123f060a08401612344565b60a082015261240160c08401612325565b60c08201525092915050565b600080610100838503121561242157600080fd5b823591506124328460208501612353565b90509250929050565b6000806000610120848603121561245157600080fd5b83359250602084013591506124698560408601612353565b90509250925092565b60006020828403121561248457600080fd5b5035919050565b6000806040838503121561249e57600080fd5b50508035926020909101359150565b803567ffffffffffffffff8116811461228857600080fd5b60008083601f8401126124d757600080fd5b50813567ffffffffffffffff8111156124ef57600080fd5b60208301915083602082850101111561250757600080fd5b9250929050565b6000806000806000806080878903121561252757600080fd5b863567ffffffffffffffff8082111561253f57600080fd5b818901915089601f83011261255357600080fd5b81358181111561256257600080fd5b8a60208260051b850101111561257757600080fd5b6020830198508097505061258d60208a016124ad565b955061259b60408a01612325565b945060608901359150808211156125b157600080fd5b506125be89828a016124c5565b979a9699509497509295939492505050565b6000808284036101008112156125e557600080fd5b8335925060e0601f19820112156125fb57600080fd5b506020830190509250929050565b600060e0828403121561261b57600080fd5b6126258383612353565b9392505050565b60006020828403121561263e57600080fd5b81356126258161230d565b634e487b7160e01b600052602160045260246000fd5b602081016004831061267357612673612649565b91905290565b60006020828403121561268b57600080fd5b8151801515811461262557600080fd5b6020808252601590820152742330b4b632b2102ba2aa24103a3930b739b332b91760591b604082015260600190565b6020808252600e908201526d24b73b30b634b21031b630b4b69760911b604082015260600190565b634e487b7160e01b600052601260045260246000fd5b60006020828403121561271a57600080fd5b5051919050565b60006020828403121561273357600080fd5b81516126258161230d565b60008261275b57634e487b7160e01b600052601260045260246000fd5b500490565b60c085901b6001600160c01b0319168152606084901b6bffffffffffffffffffffffff191660088201528183601c83013760009101601c019081529392505050565b634e487b7160e01b600052603260045260246000fd5b8183823760009101908152919050565b6000602082840312156127da57600080fd5b61262582612344565b87815260006bffffffffffffffffffffffff19808960601b16602084015263ffffffff60e01b808960e01b166034850152808860e01b166038850152808760e01b16603c850152506003851061283b5761283b612649565b60f89490941b60408301525060609190911b90911660418201526055019594505050505056fea26469706673582212205788982aa45670644676f84d9e6c6de8c43e3f17019226e7904ab38db0e1450664736f6c63430008120033";

type VeaOutboxArbToGnosisDevnetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeaOutboxArbToGnosisDevnetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VeaOutboxArbToGnosisDevnet__factory extends ContractFactory {
  constructor(...args: VeaOutboxArbToGnosisDevnetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deposit: PromiseOrValue<BigNumberish>,
    _epochPeriod: PromiseOrValue<BigNumberish>,
    _minChallengePeriod: PromiseOrValue<BigNumberish>,
    _timeoutEpochs: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _routerArbToGnosis: PromiseOrValue<string>,
    _sequencerDelayLimit: PromiseOrValue<BigNumberish>,
    _maxMissingBlocks: PromiseOrValue<BigNumberish>,
    _routerChainId: PromiseOrValue<BigNumberish>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VeaOutboxArbToGnosisDevnet> {
    return super.deploy(
      _deposit,
      _epochPeriod,
      _minChallengePeriod,
      _timeoutEpochs,
      _amb,
      _routerArbToGnosis,
      _sequencerDelayLimit,
      _maxMissingBlocks,
      _routerChainId,
      _weth,
      overrides || {}
    ) as Promise<VeaOutboxArbToGnosisDevnet>;
  }
  override getDeployTransaction(
    _deposit: PromiseOrValue<BigNumberish>,
    _epochPeriod: PromiseOrValue<BigNumberish>,
    _minChallengePeriod: PromiseOrValue<BigNumberish>,
    _timeoutEpochs: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _routerArbToGnosis: PromiseOrValue<string>,
    _sequencerDelayLimit: PromiseOrValue<BigNumberish>,
    _maxMissingBlocks: PromiseOrValue<BigNumberish>,
    _routerChainId: PromiseOrValue<BigNumberish>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _deposit,
      _epochPeriod,
      _minChallengePeriod,
      _timeoutEpochs,
      _amb,
      _routerArbToGnosis,
      _sequencerDelayLimit,
      _maxMissingBlocks,
      _routerChainId,
      _weth,
      overrides || {}
    );
  }
  override attach(address: string): VeaOutboxArbToGnosisDevnet {
    return super.attach(address) as VeaOutboxArbToGnosisDevnet;
  }
  override connect(signer: Signer): VeaOutboxArbToGnosisDevnet__factory {
    return super.connect(signer) as VeaOutboxArbToGnosisDevnet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeaOutboxArbToGnosisDevnetInterface {
    return new utils.Interface(_abi) as VeaOutboxArbToGnosisDevnetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VeaOutboxArbToGnosisDevnet {
    return new Contract(address, _abi, signerOrProvider) as VeaOutboxArbToGnosisDevnet;
  }
}
