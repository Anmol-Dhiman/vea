/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { VeaInboxTouch, VeaInboxTouchInterface } from "../../utils/VeaInboxTouch";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVeaInbox",
        name: "_veaInbox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "random",
        type: "uint256",
      },
    ],
    name: "touch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "veaInbox",
    outputs: [
      {
        internalType: "contract IVeaInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161034738038061034783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516102b0610097600039600081816040015281816095015261014b01526102b06000f3fe6080604052600436106100295760003560e01c806302d3e2361461002e578063edaa0c1d1461007e575b600080fd5b34801561003a57600080fd5b506100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61009161008c3660046101bf565b610093565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635f85896c600080846040516020016100d891815260200190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610105939291906101d8565b6020604051808303816000875af1158015610124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101489190610249565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663519205356040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101a457600080fd5b505af11580156101b8573d6000803e3d6000fd5b5050505050565b6000602082840312156101d157600080fd5b5035919050565b60018060a01b03841681526000602063ffffffff60e01b8560e01b168184015260606040840152835180606085015260005b818110156102265785810183015185820160800152820161020a565b506000608082860101526080601f19601f83011685010192505050949350505050565b60006020828403121561025b57600080fd5b815167ffffffffffffffff8116811461027357600080fd5b939250505056fea2646970667358221220a82d60b3db3a8e877448409de52fb749e1936cb97dc8beb3d3188c0a58930e1e64736f6c63430008120033";

type VeaInboxTouchConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: VeaInboxTouchConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class VeaInboxTouch__factory extends ContractFactory {
  constructor(...args: VeaInboxTouchConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _veaInbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VeaInboxTouch> {
    return super.deploy(_veaInbox, overrides || {}) as Promise<VeaInboxTouch>;
  }
  override getDeployTransaction(
    _veaInbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_veaInbox, overrides || {});
  }
  override attach(address: string): VeaInboxTouch {
    return super.attach(address) as VeaInboxTouch;
  }
  override connect(signer: Signer): VeaInboxTouch__factory {
    return super.connect(signer) as VeaInboxTouch__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeaInboxTouchInterface {
    return new utils.Interface(_abi) as VeaInboxTouchInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VeaInboxTouch {
    return new Contract(address, _abi, signerOrProvider) as VeaInboxTouch;
  }
}
