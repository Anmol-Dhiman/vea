/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VeaOutboxArbToEthDevnet,
  VeaOutboxArbToEthDevnetInterface,
} from "../../../devnets/arbitrumToEth/VeaOutboxArbToEthDevnet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epochPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minChallengePeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeoutEpochs",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_veaInboxArbToEthDevnet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxMissingBlocks",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_challenger",
        type: "address",
      },
    ],
    name: "Challenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
    ],
    name: "MessageRelayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "VerificationStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "Verified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_requestedSequencerDelayLimit",
        type: "uint256",
      },
    ],
    name: "sequencerDelayLimitDecreaseRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_newSequencerDelayLimit",
        type: "uint256",
      },
    ],
    name: "sequencerDelayLimitUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "BURN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "censorshipTestStatus",
    outputs: [
      {
        internalType: "enum VeaOutboxArbToEth.CensorshipTestStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_withdrawalAddress",
        type: "address",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devnetOperator",
        type: "address",
      },
    ],
    name: "changeDevnetOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositPlusReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateroot",
        type: "bytes32",
      },
    ],
    name: "devnetAdvanceState",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "devnetOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "epochAt",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochNow",
    outputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executeSequencerDelayLimitDecreaseRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "hashClaim",
    outputs: [
      {
        internalType: "bytes32",
        name: "hashedClaim",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_msgId",
        type: "uint256",
      },
    ],
    name: "isMsgRelayed",
    outputs: [
      {
        internalType: "bool",
        name: "isRelayed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestVerifiedEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMissingBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minChallengePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_stateRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "resolveDisputedClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint64",
        name: "_msgId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerDelayLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerDelayLimitDecreaseRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "requestedsequencerDelayLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "startVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSequencerDelayLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "veaInboxArbToEth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "verifySnapshot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawChallengeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawChallengerEscapeHatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawClaimDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "timestampClaimed",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampVerification",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "blocknumberVerification",
            type: "uint32",
          },
          {
            internalType: "enum Party",
            name: "honest",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct Claim",
        name: "_claim",
        type: "tuple",
      },
    ],
    name: "withdrawClaimerEscapeHatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b5060405162002c7638038062002c768339810160408190526200003591620002ee565b60c08790526101208690526101408590526101608490526001600160a01b0380841660a05282166080526101808190528686868686868662000076620000ee565b620000836002886200036c565b60e0819052620000958860026200038f565b620000a19190620003af565b6101005261012051600190620000b890426200036c565b620000c49190620003af565b6001555050600780546001600160a01b0319163317905550620004219a5050505050505050505050565b60006080516001600160a01b031663ee35f3276040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000131573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001579190620003c5565b6001600160a01b031663ebea461d6040518163ffffffff1660e01b8152600401608060405180830381865afa15801562000195573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001bb9190620003ea565b5092505050600454811115620002065760048190556040518181527f611c2e4a78552f908fb0eb2cc503efc1f947cde8574277ab3b0f10fdd510258b9060200160405180910390a150565b600454811015620002ce5760065415620002805760405162461bcd60e51b815260206004820152603160248201527f53657175656e636572206c696d697420646563726561736520726571756573746044820152701030b63932b0b23c903832b73234b7339760791b606482015260840160405180910390fd5b604080518082018252828152426020918201819052600584905560065590518281527fa552b382e128c9d0732f01f09502c18999aec5dce0ed78c5af0ea2274ce9bd7d910160405180910390a15b50565b80516001600160a01b0381168114620002e957600080fd5b919050565b600080600080600080600060e0888a0312156200030a57600080fd5b875196506020880151955060408801519450606088015193506200033160808901620002d1565b92506200034160a08901620002d1565b915060c0880151905092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b6000826200038a57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417620003a957620003a962000356565b92915050565b81810381811115620003a957620003a962000356565b600060208284031215620003d857600080fd5b620003e382620002d1565b9392505050565b600080600080608085870312156200040157600080fd5b505082516020840151604085015160609095015191969095509092509050565b60805160a05160c05160e0516101005161012051610140516101605161018051612704620005726000396000818161057d0152611e390152600081816105b10152818161098801528181611806015281816119910152611b9d0152600081816106390152611dcd0152600081816105e5015281816109ac01528181610cb5015281816114f50152818161182a015281816119b50152611bc10152600081816104c00152818161128601526113bf0152600081816103ab01528181611233015261137701526000818161066d01528181610cf801528181610e6601528181610e930152818161140f01528181611afb01528181611b6201528181611d0801528181611d7601528181611f2d015281816120bb01526120e80152600081816104740152610a960152600081816106ee0152818161086e01528181610a2701528181610ac0015261157601526127046000f3fe60806040526004361061020f5760003560e01c8063836e344b11610118578063b633b944116100a0578063df19e6ff1161006f578063df19e6ff146106af578063e78cea92146106dc578063e813a75514610710578063eedcf2a914610726578063fccc28131461073957600080fd5b8063b633b94414610607578063c2114a1614610627578063d0e30db01461065b578063da2b7bc41461068f57600080fd5b8063930f28af116100e7578063930f28af146105355780639588eca214610555578063aa22a1c61461056b578063b044397e1461059f578063b5b7a184146105d357600080fd5b8063836e344b146104ae5780638830dfbd146104e25780638a619a71146104f55780638ad3a8f71461051557600080fd5b80633ce43cfd1161019b57806349b4299e1161016a57806349b4299e146103ed5780634a439cfe1461040d578063541adcca1461042d5780635f43a47f1461044d57806369cd250d1461046257600080fd5b80633ce43cfd1461032c57806343b066d51461034c57806344df8e70146103995780634788cb38146103cd57600080fd5b8063222ae786116101e2578063222ae786146102935780632639c060146102b657806327ee6bdd146102e357806331d14457146102f957806331ddf7431461030c57600080fd5b806301139b6814610214578063051d1970146102295780630c63fa841461025e5780630f0adca514610273575b600080fd5b61022761022236600461222f565b61074e565b005b34801561023557600080fd5b50600554600654610244919082565b604080519283526020830191909152015b60405180910390f35b34801561026a57600080fd5b5061022761075d565b34801561027f57600080fd5b5061022761028e36600461225d565b610986565b34801561029f57600080fd5b506102a8610cae565b604051908152602001610255565b3480156102c257600080fd5b506102a86102d1366004612294565b60026020526000908152604090205481565b3480156102ef57600080fd5b506102a860015481565b6102276103073660046122ad565b610cdf565b34801561031857600080fd5b50610227610327366004612330565b610edc565b34801561033857600080fd5b506102276103473660046123f2565b61117c565b34801561035857600080fd5b50610389610367366004612294565b600881901c600090815260036020526040902054600160ff9092161c81161490565b6040519015158152602001610255565b3480156103a557600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b3480156103d957600080fd5b506102276103e836600461222f565b6112c3565b3480156103f957600080fd5b5061022761040836600461222f565b611447565b34801561041957600080fd5b506102a8610428366004612294565b6114ee565b34801561043957600080fd5b506102a861044836600461242b565b611520565b34801561045957600080fd5b50610227611572565b34801561046e57600080fd5b506104967f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610255565b3480156104ba57600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b6102276104f036600461244e565b611766565b34801561050157600080fd5b50610227610510366004612491565b611771565b34801561052157600080fd5b50600754610496906001600160a01b031681565b34801561054157600080fd5b5061022761055036600461222f565b611804565b34801561056157600080fd5b506102a860005481565b34801561057757600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b3480156105ab57600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b3480156105df57600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b34801561061357600080fd5b5061022761062236600461222f565b61198f565b34801561063357600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b34801561066757600080fd5b506102a87f000000000000000000000000000000000000000000000000000000000000000081565b34801561069b57600080fd5b506102276106aa36600461222f565b611b9b565b3480156106bb57600080fd5b506106cf6106ca36600461242b565b611daf565b60405161025591906124c4565b3480156106e857600080fd5b506104967f000000000000000000000000000000000000000000000000000000000000000081565b34801561071c57600080fd5b506102a860045481565b6102276107343660046122ad565b611e76565b34801561074557600080fd5b50610496600081565b610759828233611ef6565b5050565b6006546000036107c95760405162461bcd60e51b815260206004820152602c60248201527f4e6f2070656e64696e672073657175656e636572206c696d697420646563726560448201526b30b9b2903932b8bab2b9ba1760a11b60648201526084015b60405180910390fd5b6004546006546107d991906124f4565b42116108425760405162461bcd60e51b815260206004820152603260248201527f53657175656e636572206c696d697420646563726561736520726571756573746044820152711034b99039ba34b636103832b73234b7339760711b60648201526084016107c0565b6005805460009182905560068290556040805163ee35f32760e01b815290519192916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ee35f3279160048083019260209291908290030181865afa1580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190612507565b6001600160a01b031663ebea461d6040518163ffffffff1660e01b8152600401608060405180830381865afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190612524565b50925050508181036107595760048290556040518281527f611c2e4a78552f908fb0eb2cc503efc1f947cde8574277ab3b0f10fdd510258b9060200160405180910390a15050565b7f00000000000000000000000000000000000000000000000000000000000000006001547f000000000000000000000000000000000000000000000000000000000000000042816109d9576109d961255a565b04031115610a1c5760405162461bcd60e51b815260206004820152601060248201526f213934b233b29029b43aba3237bbb71760811b60448201526064016107c0565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a945760405162461bcd60e51b815260206004820181905260248201527f4e6f742066726f6d206e617469766520617262697472756d206272696467652e60448201526064016107c0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ab5d89436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b409190612507565b6001600160a01b03166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba19190612507565b6001600160a01b031614610bf05760405162461bcd60e51b81526020600482015260166024820152753b32b0a4b73137bc20b9312a37a2ba341037b7363c9760511b60448201526064016107c0565b60015483118015610c0057508115155b15610c4357600183905560008290556040518381527ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f79060200160405180910390a15b610c4c81611520565b60008481526002602052604090205403610ca9578051829003610c7557600160a0820152610c90565b60c08101516001600160a01b031615610c9057600260a08201525b610c9981611520565b6000848152600260205260409020555b505050565b6000610cda7f000000000000000000000000000000000000000000000000000000000000000042612570565b905090565b6007546001600160a01b03163314610cf657600080fd5b7f0000000000000000000000000000000000000000000000000000000000000000341015610d665760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420636c61696d206465706f7369742e000000000060448201526064016107c0565b80610d835760405162461bcd60e51b81526004016107c090612592565b60008281526002602052604090205415610dd55760405162461bcd60e51b815260206004820152601360248201527221b630b4b69030b63932b0b23c9036b0b2329760691b60448201526064016107c0565b6040805160e0810182528281523360208201524263ffffffff16918101919091526000606082018190526080820181905260a0820181905260c0820152610e1b90611520565b6000838152600260209081526040918290209290925551828152839133917fd95107f4584744c6c893a04c43058aadd1ce8aac8ca5d64140eaf277de6c1d57910160405180910390a37f0000000000000000000000000000000000000000000000000000000000000000341115610759576000610eb87f0000000000000000000000000000000000000000000000000000000000000000346125ba565b604051909150339082156108fc029083906000818181858888f15050505050505050565b60408510610f1e5760405162461bcd60e51b815260206004820152600f60248201526e283937b7b3103a37b7903637b7339760891b60448201526064016107c0565b600084848484604051602001610f3794939291906125cd565b604051602081830303815290604052805190602001209050806000526020600020905060005b86811015610fb7576000888883818110610f7957610f7961260f565b90506020020135905082811115610f9e57826000528060205260406000209250610fae565b8060005282602052604060002092505b50600101610f5d565b508060005414610ffa5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b210383937b7b31760911b60448201526064016107c0565b600885901c66ffffffffffffff1660008181526003602052604090205460ff87169080821c6001161561106f5760405162461bcd60e51b815260206004820152601760248201527f4d65737361676520616c72656164792072656c6179656400000000000000000060448201526064016107c0565b6000838152600360205260408082206001851b84179055516001600160a01b0389169061109f9089908990612625565b6000604051808303816000865af19150503d80600081146110dc576040519150601f19603f3d011682016040523d82523d6000602084013e6110e1565b606091505b50509050806111325760405162461bcd60e51b815260206004820152601760248201527f4661696c656420746f2063616c6c20636f6e747261637400000000000000000060448201526064016107c0565b60405167ffffffffffffffff8a1681527f54303fab361bc52c2f1f56ace7351189582264f74ce47a6e7c3f478d64c429439060200160405180910390a15050505050505050505050565b61118e6104483683900383018361242b565b600083815260026020526040902054146111ba5760405162461bcd60e51b81526004016107c090612592565b60026111cc60c0830160a08401612635565b60028111156111dd576111dd6124ae565b1461121e5760405162461bcd60e51b815260206004820152601160248201527021b430b63632b733b2903330b4b632b21760791b60448201526064016107c0565b600082815260026020526040808220829055517f000000000000000000000000000000000000000000000000000000000000000080156108fc029183818181858288f15061127893505060e0840191505060c08301612491565b6001600160a01b03166108fc7f00000000000000000000000000000000000000000000000000000000000000009081150290604051600060405180830381858888f150505050505050565b6112cc81611520565b600083815260026020526040902054146112f85760405162461bcd60e51b81526004016107c090612592565b60018160a001516002811115611310576113106124ae565b1461134d5760405162461bcd60e51b815260206004820152600d60248201526c21b630b4b6903330b4b632b21760991b60448201526064016107c0565b60008281526002602052604081205560c08101516001600160a01b0316156113f9576040516000907f000000000000000000000000000000000000000000000000000000000000000080156108fc029183818181858288f150505060208301516040516001600160a01b0390911692507f000000000000000000000000000000000000000000000000000000000000000080156108fc029250906000818181858888f150505050505050565b60208101516040516001600160a01b03909116907f000000000000000000000000000000000000000000000000000000000000000080156108fc02916000818181858888f150505050505050565b6007546001600160a01b0316331461145e57600080fd5b61146781611520565b600083815260026020526040902054146114935760405162461bcd60e51b81526004016107c090612592565b63ffffffff4281166060830152431660808201526114b081611520565b60008381526002602052604080822092909255905183917f37b700b61b9b4710dddb0c3316b2be7ef6088ed4b1d7bfe0fb98be8f9a163e1691a25050565b600061151a7f000000000000000000000000000000000000000000000000000000000000000083612570565b92915050565b80516020808301516040808501516060860151608087015160a088015160c08901519451600098611555989097969101612650565b604051602081830303815290604052805190602001209050919050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ee35f3276040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f69190612507565b6001600160a01b031663ebea461d6040518163ffffffff1660e01b8152600401608060405180830381865afa158015611633573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116579190612524565b50925050506004548111156116a15760048190556040518181527f611c2e4a78552f908fb0eb2cc503efc1f947cde8574277ab3b0f10fdd510258b9060200160405180910390a150565b60045481101561176357600654156117155760405162461bcd60e51b815260206004820152603160248201527f53657175656e636572206c696d697420646563726561736520726571756573746044820152701030b63932b0b23c903832b73234b7339760791b60648201526084016107c0565b604080518082018252828152426020918201819052600584905560065590518281527fa552b382e128c9d0732f01f09502c18999aec5dce0ed78c5af0ea2274ce9bd7d910160405180910390a15b50565b610ca9838383611ef6565b6007546001600160a01b0316331461178857600080fd5b6007546001600160a01b031633146117e25760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420546573746e6574204f70657261746f72000000000000000060448201526064016107c0565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001547f000000000000000000000000000000000000000000000000000000000000000042816118575761185761255a565b0403111561189a5760405162461bcd60e51b815260206004820152601060248201526f213934b233b29029b43aba3237bbb71760811b60448201526064016107c0565b6118a381611520565b600083815260026020526040902054146118cf5760405162461bcd60e51b81526004016107c090612592565b60c08101516001600160a01b0316156119215760405162461bcd60e51b815260206004820152601460248201527321b630b4b69034b99031b430b63632b733b2b21760611b60448201526064016107c0565b60015482111561196957600182905580516000556040518281527ff786e7f77ede00a02a5464f8f0555798f42ba99a4a920ef2778db8d75e4656f79060200160405180910390a15b600160a082015261197981611520565b6000928352600260205260409092209190915550565b7f00000000000000000000000000000000000000000000000000000000000000006001547f000000000000000000000000000000000000000000000000000000000000000042816119e2576119e261255a565b040311611a235760405162461bcd60e51b815260206004820152600f60248201526e213934b233b290293ab73734b7339760891b60448201526064016107c0565b611a2c81611520565b60008381526002602052604090205414611a585760405162461bcd60e51b81526004016107c090612592565b60008160a001516002811115611a7057611a706124ae565b14611aaf5760405162461bcd60e51b815260206004820152600f60248201526e21b630b4b6903932b9b7b63b32b21760891b60448201526064016107c0565b60c08101516001600160a01b0316156107595760208101516001600160a01b0316611b335760008281526002602052604080822082905560c083015190516001600160a01b03909116917f000000000000000000000000000000000000000000000000000000000000000080156108fc02929091818181858888f150505050505050565b60c0810180516000909152611b4782611520565b50600083815260026020526040516001600160a01b038316917f000000000000000000000000000000000000000000000000000000000000000080156108fc02929091818181858888f15050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001547f00000000000000000000000000000000000000000000000000000000000000004281611bee57611bee61255a565b040311611c2f5760405162461bcd60e51b815260206004820152600f60248201526e213934b233b290293ab73734b7339760891b60448201526064016107c0565b611c3881611520565b60008381526002602052604090205414611c645760405162461bcd60e51b81526004016107c090612592565b60008160a001516002811115611c7c57611c7c6124ae565b14611cbb5760405162461bcd60e51b815260206004820152600f60248201526e21b630b4b6903932b9b7b63b32b21760891b60448201526064016107c0565b60208101516001600160a01b0316156107595760c08101516001600160a01b0316611d405760008281526002602090815260408083208390559083015190516001600160a01b03909116917f000000000000000000000000000000000000000000000000000000000000000080156108fc02929091818181858888f150505050505050565b6020810180516000909152611d5482611520565b6000848152600260205260408082209290925590516001600160a01b038316917f000000000000000000000000000000000000000000000000000000000000000080156108fc02929091818181858888f15050505050505050565b6000816060015163ffffffff16600003611dcb57506002919050565b7f0000000000000000000000000000000000000000000000000000000000000000826060015163ffffffff1642031015611e0757506003919050565b6000600c836060015163ffffffff16420381611e2557611e2561255a565b608085015163ffffffff16919004019050437f000000000000000000000000000000000000000000000000000000000000000081830311611e695760019250611e6e565b600092505b50505b919050565b611e808282610cdf565b6040805160e0810182528281523360208201524263ffffffff16918101919091526000606082018190526080820181905260a0820181905260c0820152611ec78382611447565b63ffffffff428116606083015243166080820152611ee58382611804565b600160a0820152610ca983826112c3565b611eff82611520565b60008481526002602052604090205414611f2b5760405162461bcd60e51b81526004016107c090612592565b7f0000000000000000000000000000000000000000000000000000000000000000341015611f9b5760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e74206368616c6c656e6765206465706f7369742e0060448201526064016107c0565b60c08201516001600160a01b031615611ff65760405162461bcd60e51b815260206004820152601960248201527f436c61696d20616c7265616479206368616c6c656e6765642e0000000000000060448201526064016107c0565b60008260a00151600281111561200e5761200e6124ae565b1461205b5760405162461bcd60e51b815260206004820152601760248201527f436c61696d20616c72656164792076657269666965642e00000000000000000060448201526064016107c0565b6001600160a01b03811660c083015261207382611520565b6000848152600260205260408082209290925590516001600160a01b0383169185917fcfe09ca25f55d949baba5e280f5750c9ba4b9048fca5532f916067d433afe4d79190a37f0000000000000000000000000000000000000000000000000000000000000000341115610ca957600061210d7f0000000000000000000000000000000000000000000000000000000000000000346125ba565b604051909150339082156108fc029083906000818181858888f1505050505050505050565b6001600160a01b038116811461176357600080fd5b8035611e7181612132565b803563ffffffff81168114611e7157600080fd5b803560038110611e7157600080fd5b600060e0828403121561218757600080fd5b60405160e0810181811067ffffffffffffffff821117156121b857634e487b7160e01b600052604160045260246000fd5b604052823581529050806121ce60208401612147565b60208201526121df60408401612152565b60408201526121f060608401612152565b606082015261220160808401612152565b608082015261221260a08401612166565b60a082015261222360c08401612147565b60c08201525092915050565b600080610100838503121561224357600080fd5b823591506122548460208501612175565b90509250929050565b6000806000610120848603121561227357600080fd5b833592506020840135915061228b8560408601612175565b90509250925092565b6000602082840312156122a657600080fd5b5035919050565b600080604083850312156122c057600080fd5b50508035926020909101359150565b803567ffffffffffffffff81168114611e7157600080fd5b60008083601f8401126122f957600080fd5b50813567ffffffffffffffff81111561231157600080fd5b60208301915083602082850101111561232957600080fd5b9250929050565b6000806000806000806080878903121561234957600080fd5b863567ffffffffffffffff8082111561236157600080fd5b818901915089601f83011261237557600080fd5b81358181111561238457600080fd5b8a60208260051b850101111561239957600080fd5b602083019850809750506123af60208a016122cf565b95506123bd60408a01612147565b945060608901359150808211156123d357600080fd5b506123e089828a016122e7565b979a9699509497509295939492505050565b60008082840361010081121561240757600080fd5b8335925060e0601f198201121561241d57600080fd5b506020830190509250929050565b600060e0828403121561243d57600080fd5b6124478383612175565b9392505050565b6000806000610120848603121561246457600080fd5b833592506124758560208601612175565b915061010084013561248681612132565b809150509250925092565b6000602082840312156124a357600080fd5b813561244781612132565b634e487b7160e01b600052602160045260246000fd5b60208101600483106124d8576124d86124ae565b91905290565b634e487b7160e01b600052601160045260246000fd5b8082018082111561151a5761151a6124de565b60006020828403121561251957600080fd5b815161244781612132565b6000806000806080858703121561253a57600080fd5b505082516020840151604085015160609095015191969095509092509050565b634e487b7160e01b600052601260045260246000fd5b60008261258d57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600e908201526d24b73b30b634b21031b630b4b69760911b604082015260600190565b8181038181111561151a5761151a6124de565b60c085901b6001600160c01b0319168152606084901b6bffffffffffffffffffffffff191660088201528183601c83013760009101601c019081529392505050565b634e487b7160e01b600052603260045260246000fd5b8183823760009101908152919050565b60006020828403121561264757600080fd5b61244782612166565b87815260006bffffffffffffffffffffffff19808960601b16602084015263ffffffff60e01b808960e01b166034850152808860e01b166038850152808760e01b16603c85015250600385106126a8576126a86124ae565b60f89490941b60408301525060609190911b90911660418201526055019594505050505056fea2646970667358221220f3249240b4c140797e0832804f90fe9052e2dea973020a88ef23f4818135493564736f6c63430008120033";

type VeaOutboxArbToEthDevnetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeaOutboxArbToEthDevnetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VeaOutboxArbToEthDevnet__factory extends ContractFactory {
  constructor(...args: VeaOutboxArbToEthDevnetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deposit: PromiseOrValue<BigNumberish>,
    _epochPeriod: PromiseOrValue<BigNumberish>,
    _minChallengePeriod: PromiseOrValue<BigNumberish>,
    _timeoutEpochs: PromiseOrValue<BigNumberish>,
    _veaInboxArbToEthDevnet: PromiseOrValue<string>,
    _bridge: PromiseOrValue<string>,
    _maxMissingBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VeaOutboxArbToEthDevnet> {
    return super.deploy(
      _deposit,
      _epochPeriod,
      _minChallengePeriod,
      _timeoutEpochs,
      _veaInboxArbToEthDevnet,
      _bridge,
      _maxMissingBlocks,
      overrides || {}
    ) as Promise<VeaOutboxArbToEthDevnet>;
  }
  override getDeployTransaction(
    _deposit: PromiseOrValue<BigNumberish>,
    _epochPeriod: PromiseOrValue<BigNumberish>,
    _minChallengePeriod: PromiseOrValue<BigNumberish>,
    _timeoutEpochs: PromiseOrValue<BigNumberish>,
    _veaInboxArbToEthDevnet: PromiseOrValue<string>,
    _bridge: PromiseOrValue<string>,
    _maxMissingBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _deposit,
      _epochPeriod,
      _minChallengePeriod,
      _timeoutEpochs,
      _veaInboxArbToEthDevnet,
      _bridge,
      _maxMissingBlocks,
      overrides || {}
    );
  }
  override attach(address: string): VeaOutboxArbToEthDevnet {
    return super.attach(address) as VeaOutboxArbToEthDevnet;
  }
  override connect(signer: Signer): VeaOutboxArbToEthDevnet__factory {
    return super.connect(signer) as VeaOutboxArbToEthDevnet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeaOutboxArbToEthDevnetInterface {
    return new utils.Interface(_abi) as VeaOutboxArbToEthDevnetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VeaOutboxArbToEthDevnet {
    return new Contract(address, _abi, signerOrProvider) as VeaOutboxArbToEthDevnet;
  }
}
